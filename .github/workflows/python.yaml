name: Python Syntax Check

on:
  workflow_dispatch:
    inputs:
      ShouldRunTests:
        description: 'Запускать тесты?'
        type: boolean
        default: true
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.py'
      - '!README.md'

jobs:
  check-syntax:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Get changed Python files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          since_last_remote_commit: 'true'
          files: |
            **.py
            !**/tests/**
  

      - name: Install dependencies
        run: pip install pytest

      - name: Check test flag
        if: ${{ !inputs.ShouldRunTests && github.event_name == 'workflow_dispatch' }}
        run: |
          echo "⚠️ Тесты пропущены по требованию (ShouldRunTests=false)"
          echo "Это не ошибка, просто тесты отключены явно"

      - name: Run Python syntax check
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            python -m py_compile "$file"
          done

      - name: Run TSP tests
        if: ${{ (inputs.ShouldRunTests || github.event_name != 'workflow_dispatch') && (contains(steps.changed-files.outputs.all_changed_files, 'prob.py') || contains(steps.changed-files.outputs.all_changed_files, 'test_tsp.py')) }}
        run: |
          echo "Запуск тестов для TSP..."
          pytest tests/test_tsp.py -v

      - name: Run main script
        if: ${{ contains(steps.changed-files.outputs.all_changed_files, 'prob.py') }}
        run: python prob.py

      - name: "Как открыть кукурузу"
        run: |
          echo "Инструкция: Как открыть банку кукурузы:"
          echo "1. Возьмите банку и консервный нож"
          echo "2. Подденьте крышку ножом"
          echo "3. Прокрутите нож по окружности банки"
          echo "4. Поздравляем! Готово!"